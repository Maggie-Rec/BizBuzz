// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id
  email    String @unique
  password String
  username String
}

model Transaction_0 {
  record_id      Int        @id @default(autoincrement())
  transaction_id Int
  date           DateTime   @db.Date
  time           DateTime   @db.Time(6)
  location       Location_0 @relation(fields: [location_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  location_id    Int
  item           Item_0     @relation(fields: [SKU], references: [SKU], onDelete: Cascade, onUpdate: Cascade)
  SKU            String
  quantity       Decimal    @db.Decimal
  is_member      Boolean
  customer       Customer_0 @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customer_id    Int
  total_with_tax Decimal    @db.Decimal
  tax            Decimal    @db.Decimal
}

model Location_0 {
  id           Int             @id @default(autoincrement())
  name         String
  full_address String
  region       String
  city         String
  type         String
  transactions Transaction_0[]
  inventory    Inventory_0[]
}

model Item_0 {
  SKU                 String          @id
  inventory           Inventory_0[]
  transactions        Transaction_0[]
  unit_of_measurement String
  description         String
  category            String
  price_no_tax        Decimal
}

model Customer_0 {
  id           Int             @id @default(autoincrement())
  transactions Transaction_0[]
  name         String
  age          Int
  email        String
  gender       String
}

model Inventory_0 {
  id          Int        @id @default(autoincrement())
  SKU         String
  item        Item_0     @relation(fields: [SKU], references: [SKU], onDelete: Cascade, onUpdate: Cascade)
  location    Location_0 @relation(fields: [location_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  location_id Int
  stock       Decimal
  capacity    Int
}